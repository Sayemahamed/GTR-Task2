import re

FORBIDDEN_KEYWORDS = [
    "DELETE",
    "UPDATE",
    "INSERT",
    "DROP",
    "TRUNCATE",
    "ALTER",
    "CREATE",
    "GRANT",
    "REVOKE",
    "EXEC",
    "EXECUTE",
    "UNION",
    "MERGE",
    "COMMIT",
    "ROLLBACK",
]
FORBIDDEN_PATTERNS = [";", "--"]


def is_safe_where_clause(clause: str) -> bool:
    """
    Validates a SQL WHERE clause to ensure it doesn't contain forbidden keywords
    or patterns that could lead to SQL injection.

    Args:
        clause (str): The WHERE clause string generated by the LLM.

    Returns:
        bool: True if the clause is deemed safe, False otherwise.
    """
    if len(clause) > 500:
        return False
    upper_clause = clause.upper()
    for pattern in FORBIDDEN_PATTERNS:
        if pattern in clause:
            return False
    for keyword in FORBIDDEN_KEYWORDS:
        if re.search(r"\b" + keyword + r"\b", upper_clause):
            return False
    return True
